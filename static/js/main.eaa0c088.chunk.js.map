{"version":3,"sources":["common/loading/loading.module.scss","rootReducers.js","reducers/historyReducer.js","constants/redux.js","reducers/common.js","Store.js","constants/users.js","helpers/checkLogin.js","helpers/sessionStorage.js","services/api.js","helpers/generators.js","typeRacer/textHelper.js","typeRacer/TypeBox.js","typeRacer/TextBox.js","typeRacer/Game.js","common/loading/index.js","common/ErrorBoundary.js","typeRacer/userHistoryHelper.js","typeRacer/index.js","helpers/interval.js","helpers/calcs.js","helpers/time.js","actions/historyAction.js","actions/common.js","history/HistoryView.js","history/index.js","home/index.js","common/UncontrolledInput.js","login/LoginForm.js","helpers/formDataHandler.js","login/RedirectExistingUser.js","utils/auth.js","login/index.js","notFound/index.js","common/Header.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","combineReducers","historyUpdated","state","action","type","data","loading","tail","store","createStore","rootReducers","applyMiddleware","Thunk","users","name","pass","binId","checkLogin","Users","v","ssGetUser","user","JSON","parse","sessionStorage","getItem","dbApi","getText","axios","get","saveGame","wpm","progress","post","getHistory","userBinId","updateHistory","put","wordIterator","arr","i","length","yieldStr","TypeBox","memo","props","isWrong","handle","input","classes","onChange","value","className","TextBox","text","colors","data-testid","onContextMenu","e","preventDefault","prevText","currentWord","done","split","map","key","nextText","PropTypes","bool","shape","arrayOf","string","defaultProps","next","charColors","wrongChar","Game","useState","inputValue","setInputValue","textParts","setParts","prevInputValue","useRef","start","wordsIterator","separator","replace","createTextParts","proceedWord","parts","setTextForNextWord","current","sendData","target","substring","fill","charData","proceedChar","Loading","styles","loader","ErrorBoundary","logErrorToBackend","error","info","console","log","hasError","this","children","React","Component","generateHistoryData","userObj","userHistory","history","nextTextFull","prevTextFull","unshift","nextTxt","prevTxt","TypeRacer","globalLoading","notifyHistoryUpdated","setStart","setError","setLoading","seconds","setSeconds","setWpm","setProgress","delay","setDelay","textData","setTextData","startGame","a","Api","catch","callback","savedCallback","useEffect","id","setInterval","clearInterval","useInterval","len","time","averageWordLength","mins","Math","round","calculateWPM","passedTextLength","totalLength","calculateProgress","userData","receiveData","useCallback","min","floor","sec","toString","formatMinSec","onClick","connect","dispatch","getState","HistoryView","renderNoItems","exact","number","historyData","setHistory","result","Home","UncontrolledInput","label","placeholder","autoComplete","LoginForm","onSubmit","formData","FormData","values","formDataHandler","username","handleSubmit","RedirectExistingUser","manualRedirect","to","ExtendComponent","Login","handleError","redirect","handleRedirect","loginData","validateLogin","userDataStr","stringify","setItem","ssSetUser","NotFound","Header","removeItem","push","path","component","LoginContainer","App","Store","routes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaa0c088.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loading_loader__2hW0l\",\"spin\":\"loading_spin__3SIsi\"};","import { combineReducers } from \"redux\";\r\nimport { historyUpdated } from \"./reducers/historyReducer\";\r\nimport { loading } from \"./reducers/common\";\r\n\r\nexport default combineReducers({\r\n  historyUpdated,\r\n  loading\r\n});\r\n","import { HISTORY_UPDATED } from \"../constants/redux\";\r\n\r\nexport const historyUpdated = (state = false, action = {}) => {\r\n  switch (action.type) {\r\n    case HISTORY_UPDATED:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const HISTORY_UPDATED = \"HISTORY_UPDATED\";\r\nexport const LOADING = \"LOADING_\";\r\n","import { LOADING } from \"../constants/redux\";\r\n\r\nexport const loading = (state = false, action = {}) => {\r\n  switch (action.type) {\r\n    case `${LOADING}${action.tail}`:\r\n      return action.loading;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport Thunk from \"redux-thunk\";\r\nimport rootReducers from \"./rootReducers\";\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(Thunk));\r\n\r\nexport default store;\r\n","const users = [\r\n  {\r\n    name: \"user1\",\r\n    pass: \"123\",\r\n    binId: \"142dyt\"\r\n  },\r\n  {\r\n    name: \"user2\",\r\n    pass: \"123\",\r\n    binId: \"16i9jp\"\r\n  }\r\n];\r\n\r\nexport default users;\r\n","import Users from \"../constants/users\";\r\n\r\nexport const checkLogin = (name = \"\", binId = \"\") => {\r\n  for (let v of Users) {\r\n    if (v.name === name && v.binId === binId) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const validateLogin = (name = \"\", pass = \"\") => {\r\n  for (let v of Users) {\r\n    if (v.name === name && v.pass === pass) {\r\n      return v;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","export const ssSetUser = (data = {}) => {\r\n  const userDataStr = JSON.stringify({\r\n    name: data.name,\r\n    binId: data.binId\r\n  });\r\n  sessionStorage.setItem(\"user\", userDataStr);\r\n  return true;\r\n};\r\n\r\nexport const ssGetUser = () => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n  if (user === null) {\r\n    return false;\r\n  }\r\n  return user;\r\n};\r\n\r\nexport const ssLogout = () => {\r\n  sessionStorage.removeItem(\"user\");\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst textApi = `https://baconipsum.com/api`;\r\nconst dbApi = `https://api.myjson.com/bins`;\r\n\r\nclass Api {\r\n  getText = () => axios.get(`${textApi}/?type=filler&sentences=1&format=text`);\r\n\r\n  saveGame = (wpm = 0, progress = 0) => axios.post(dbApi, { wpm, progress });\r\n\r\n  getHistory = userBinId => axios.get(`${dbApi}/${userBinId}`);\r\n\r\n  updateHistory = (userBinId, data) => axios.put(`${dbApi}/${userBinId}`, data);\r\n}\r\n\r\nexport default new Api();\r\n","export function* wordIterator(arr = [], tail = \"\") {\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    let yieldStr = `${arr[i]}${tail}`;\r\n\r\n    if (i === arr.length - 1) {\r\n      yieldStr = `${arr[i]}`;\r\n    }\r\n\r\n    yield yieldStr;\r\n  }\r\n}\r\n","import { wordIterator } from \"../helpers/generators\";\r\n\r\n//generate text parts for easy handling each word, and avoiding whole text recompute/rerender\r\nexport const createTextParts = (text = \"\") => {\r\n  let wordsIterator = {},\r\n    currentWord = {},\r\n    nextText = \"\";\r\n  if (text.length) {\r\n    const separator = \" \";\r\n    wordsIterator = wordIterator(text.split(separator), separator);\r\n    currentWord = wordsIterator.next();\r\n    nextText = text.replace(currentWord.value, \"\");\r\n  }\r\n\r\n  return { wordsIterator, currentWord, nextText, prevText: \"\" };\r\n};\r\n\r\n//check if input is wrong or not\r\nexport const proceedChar = (v = \"\", colors = [], currentWord = \"\") => {\r\n  let wrongChar = false;\r\n  for (let i in v) {\r\n    colors[i] = \"success\";\r\n    if (v[i] !== currentWord[i]) {\r\n      colors[i] = \"danger\";\r\n      wrongChar = true;\r\n      break;\r\n    }\r\n  }\r\n  return { wrongChar, colors };\r\n};\r\n\r\n//recompute values for previous, next and current parts of the string\r\nexport const setTextForNextWord = (data = {}) => {\r\n  let parts = { ...data };\r\n  parts.prevText = `${parts.prevText}${parts.currentWord.value}`;\r\n  parts.currentWord = parts.wordsIterator.next();\r\n  parts.nextText = parts.nextText.replace(`${parts.currentWord.value}`, \"\");\r\n  return parts;\r\n};\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TypeBox = memo(props => {\r\n  const { isWrong, handle, input } = props;\r\n  const classes = \"input \" + (isWrong ? \"input-danger\" : \"input-default\");\r\n  return (\r\n    <input type=\"text\" onChange={handle} value={input} className={classes} />\r\n  );\r\n});\r\n\r\nTypeBox.propTypes = {\r\n  handle: PropTypes.func,\r\n  input: PropTypes.string,\r\n  isWrong: PropTypes.bool\r\n};\r\n\r\nexport default TypeBox;\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextBox = memo(props => {\r\n  const { text, colors } = props;\r\n\r\n  const preventCopy = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <p data-testid=\"textToType\" onContextMenu={preventCopy}>\r\n      <span className=\"text-success\">{text.prevText}</span>\r\n      <span>\r\n        {text.currentWord &&\r\n          !text.currentWord.done &&\r\n          text.currentWord.value.split(\"\").map((v, i) => (\r\n            <span key={i} className={colors[i] ? `text-${colors[i]}` : null}>\r\n              {v}\r\n            </span>\r\n          ))}\r\n      </span>\r\n      <span>{text.nextText}</span>\r\n    </p>\r\n  );\r\n});\r\n\r\nconst { bool, shape, arrayOf, string } = PropTypes;\r\n\r\nTextBox.propTypes = {\r\n  colors: arrayOf(string).isRequired,\r\n  text: shape({\r\n    currentWord: shape({\r\n      next: string,\r\n      done: bool\r\n    }),\r\n    prevText: string,\r\n    nextText: string\r\n  }).isRequired\r\n};\r\n\r\nTextBox.defaultProps = {\r\n  colors: [],\r\n  text: {\r\n    currentWord: { next: \"\", done: false },\r\n    prevText: \"\",\r\n    nextText: \"\"\r\n  }\r\n};\r\n\r\nexport default TextBox;\r\n","import React, { useState, useRef, memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createTextParts, proceedChar, setTextForNextWord } from \"./textHelper\";\r\nimport TypeBox from \"./TypeBox\";\r\nimport TextBox from \"./TextBox\";\r\n\r\nlet charColors = [];\r\nlet wrongChar = false;\r\n\r\nconst Game = memo(props => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [textParts, setParts] = useState({});\r\n\r\n  const prevInputValue = useRef(\"\");\r\n\r\n  if (!inputValue.length) {\r\n    wrongChar = false;\r\n    charColors = [];\r\n  }\r\n  if (!props.start || !props.text.length) {\r\n    return null;\r\n  }\r\n\r\n  //create previous, next, current parts of the word and an iterator for words\r\n  if (!textParts.nextText && !textParts.prevText) {\r\n    setParts(createTextParts(props.text));\r\n  }\r\n\r\n  //check if word is correct and set next word as current, update previous and next texts\r\n  const proceedWord = v => {\r\n    wrongChar = false;\r\n    let parts = { ...textParts };\r\n    parts = setTextForNextWord(parts);\r\n    setInputValue(\"\");\r\n    prevInputValue.current = \"\";\r\n    setParts(parts);\r\n    props.sendData({ ...parts });\r\n  };\r\n\r\n  const proceedInput = e => {\r\n    let v = e.target.value;\r\n\r\n    //restrict user to enter one char at a time. Preventing copy/paste\r\n    if (v.length - prevInputValue.current.length > 2) {\r\n      v = v.substring(0, 1);\r\n    }\r\n    setInputValue(v);\r\n    prevInputValue.current = v;\r\n\r\n    charColors = [textParts.currentWord.length].fill(\"default\");\r\n\r\n    if (v === textParts.currentWord.value) {\r\n      // input is a complete word\r\n      proceedWord(v);\r\n    } else {\r\n      // input is a part of word\r\n      const charData = proceedChar(v, charColors, textParts.currentWord.value);\r\n      charColors = [...charData.colors];\r\n      wrongChar = charData.wrongChar;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextBox colors={charColors} text={textParts} />\r\n      <TypeBox handle={proceedInput} isWrong={wrongChar} input={inputValue} />\r\n    </>\r\n  );\r\n});\r\n\r\nGame.propTypes = {\r\n  sendData: PropTypes.func,\r\n  start: PropTypes.bool,\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport styles from \"./loading.module.scss\";\r\n\r\nconst Loading = () => {\r\n  return <div className={styles.loader}></div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.logErrorToBackend(error, info);\r\n  }\r\n\r\n  logErrorToBackend = (error, info) => {\r\n    console.log(error, info);\r\n  };\r\n\r\n  render() {\r\n    let error = \"\";\r\n    if (this.props.error) {\r\n      error = this.props.error;\r\n    } else if (this.state.hasError) {\r\n      error = this.state.hasError;\r\n    }\r\n    if (error.length) {\r\n      this.logErrorToBackend(error);\r\n      return <span>Something went wrong. Please try again later</span>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PropTypes.element,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","//receives user's history, adds newly finished game result to it and returns\r\nexport const generateHistoryData = (\r\n  userObj = {},\r\n  parts = {},\r\n  wpm = 0,\r\n  progress = 0\r\n) => {\r\n  const userHistory = { ...userObj };\r\n\r\n  //if the user fon't have a history yet, create\r\n  if (!userHistory.history) {\r\n    userHistory.history = [];\r\n  }\r\n\r\n  let nextTextFull = parts.nextText;\r\n\r\n  //add currend word to the unfinished part of the string\r\n  if (parts.currentWord && !parts.currentWord.done) {\r\n    nextTextFull = `${parts.currentWord.value}${parts.nextText}`;\r\n  }\r\n\r\n  if (!parts.nextText) {\r\n    nextTextFull = \"\";\r\n  }\r\n\r\n  let prevTextFull = parts.prevText;\r\n\r\n  if (!parts.prevText) {\r\n    prevTextFull = \"\";\r\n  }\r\n\r\n  userHistory.history.unshift({\r\n    wpm: wpm,\r\n    progress: progress,\r\n    nextTxt: nextTextFull,\r\n    prevTxt: prevTextFull\r\n  });\r\n  return userHistory;\r\n};\r\n","import React, { useState, useEffect, memo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Api from \"../services/api\";\r\nimport Game from \"./Game\";\r\nimport Loading from \"../common/loading\";\r\nimport { notifyHistoryUpdated } from \"../actions/historyAction\";\r\nimport { globalLoading } from \"../actions/common\";\r\nimport { ssGetUser } from \"../helpers/sessionStorage\";\r\nimport ErrorBoundary from \"../common/ErrorBoundary\";\r\nimport { formatMinSec } from \"../helpers/time\";\r\nimport { useInterval } from \"../helpers/interval.js\";\r\nimport { calculateWPM, calculateProgress } from \"../helpers/calcs\";\r\nimport { generateHistoryData } from \"./userHistoryHelper\";\r\n\r\nconst SECONDS = 10;\r\n\r\nconst TypeRacer = memo(props => {\r\n  const { globalLoading, notifyHistoryUpdated } = props;\r\n\r\n  const [start, setStart] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [seconds, setSeconds] = useState(SECONDS);\r\n  const [parts, setParts] = useState({ prevText: \"\" });\r\n  const [wpm, setWpm] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [delay, setDelay] = useState(1000);\r\n  const [textData, setTextData] = useState(\"\");\r\n\r\n  const startGame = async () => {\r\n    setLoading(true);\r\n    let text = await Api.getText().catch(e => setError(true));\r\n    setStart(true);\r\n    setDelay(1000);\r\n    setTextData(text.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  //update time, progress and wpm every second\r\n  useInterval(() => {\r\n    if (textData.length && start) {\r\n      if (seconds < SECONDS) {\r\n        setWpm(calculateWPM(parts.prevText.length, SECONDS - seconds));\r\n        setProgress(calculateProgress(parts.prevText.length, textData.length));\r\n      }\r\n      setSeconds(seconds - 1);\r\n    }\r\n  }, delay);\r\n\r\n  useEffect(() => {\r\n    const saveGame = async () => {\r\n      globalLoading(true, \"HISTORY\");\r\n      const userBinId = ssGetUser().binId;\r\n      const userData = await Api.getHistory(userBinId).catch(e =>\r\n        setError(true)\r\n      );\r\n\r\n      const userObj = { ...userData.data };\r\n      const userHistory = generateHistoryData(userObj, parts, wpm, progress);\r\n\r\n      await Api.updateHistory(userBinId, userHistory).catch(e =>\r\n        setError(true)\r\n      );\r\n      notifyHistoryUpdated();\r\n      globalLoading(false, \"HISTORY\");\r\n    };\r\n\r\n    const resetGame = () => {\r\n      setStart(false);\r\n      setProgress(0);\r\n      setWpm(0);\r\n      setSeconds(SECONDS);\r\n      setDelay(null);\r\n      setTextData(\"\");\r\n      setParts({ prevText: \"\" });\r\n    };\r\n\r\n    if (seconds === 0 || progress === 100) {\r\n      saveGame();\r\n      resetGame();\r\n    }\r\n  }, [seconds, progress, parts, wpm, globalLoading, notifyHistoryUpdated]);\r\n\r\n  const receiveData = useCallback(data => setParts(data), []);\r\n\r\n  return (\r\n    <div className=\"game defaultBox\" data-testid=\"gameContainer\">\r\n      {error ? (\r\n        <ErrorBoundary error={\"Wrong Api call\"} />\r\n      ) : loading ? (\r\n        <Loading />\r\n      ) : !start ? (\r\n        <button\r\n          className=\"btn btn-default\"\r\n          data-testid=\"startGame\"\r\n          onClick={startGame}\r\n        >\r\n          Play\r\n        </button>\r\n      ) : start ? (\r\n        <>\r\n          <p>{formatMinSec(seconds)}</p>\r\n          <p>speed: {wpm} wpm</p>\r\n          <p>Your progress: {progress}%</p>\r\n          <Game start={start} text={textData} sendData={receiveData} />\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n});\r\n\r\nTypeRacer.propTypes = {\r\n  globalLoading: PropTypes.func,\r\n  notifyHistoryUpdated: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { notifyHistoryUpdated, globalLoading }\r\n)(TypeRacer);\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback = () => {}, delay = null) => {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      savedCallback.current();\r\n    };\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","export const calculateWPM = (len = 0, time = 1) => {\r\n  const averageWordLength = len / 5;\r\n  const mins = time / 60;\r\n  return Math.round(averageWordLength / mins);\r\n};\r\n\r\nexport const calculateProgress = (passedTextLength = 0, totalLength = 1) => {\r\n  return Math.round((passedTextLength * 100) / totalLength);\r\n};\r\n","export const formatMinSec = (seconds = 0) => {\r\n  let tail = \"\";\r\n  const min = Math.floor(seconds / 60);\r\n  const sec = seconds % 60;\r\n\r\n  if (sec.toString().length === 1) {\r\n    tail = \"0\";\r\n  }\r\n  return `${min}:${tail}${sec}`;\r\n};\r\n","import { HISTORY_UPDATED } from \"../constants/redux\";\r\n\r\nexport const notifyHistoryUpdated = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: HISTORY_UPDATED,\r\n      data: !getState().historyUpdated\r\n    });\r\n  };\r\n};\r\n","import { LOADING } from \"../constants/redux\";\r\n\r\nexport const globalLoading = (loading = false, tail = \"\") => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: `${LOADING}${tail}`,\r\n      loading,\r\n      tail\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loading from \"../common/loading\";\r\n\r\nconst HistoryView = props => {\r\n  const renderNoItems = () => {\r\n    if (!props.data.length) {\r\n      return <span>No items yet</span>;\r\n    }\r\n  };\r\n\r\n  const renderHistory = () => {\r\n    return (\r\n      <>\r\n        <h2>History</h2>\r\n        {props.data.map((v, i) => (\r\n          /*it'a a bad practice to put index as a key, \r\n          but this is a limitation of the API which isn't giving an ID, \r\n          and for this particular case, it's safe to use index\r\n          */\r\n          <div className=\"defaultBox historyItem\" key={i}>\r\n            <div className=\"historyStats\">\r\n              <p>\r\n                speed: <b>{v.wpm}</b> wpm\r\n              </p>\r\n              <p>\r\n                progress: <b>{v.progress}</b> %\r\n              </p>\r\n            </div>\r\n            <div className=\"historyText\">\r\n              <span className=\"text-success\">\r\n                <b>{v.prevTxt}</b>\r\n              </span>\r\n              <span>{v.nextTxt}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"gameHistory defaultBox\">\r\n      {props.loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {renderHistory()} {renderNoItems()}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst { arrayOf, exact, string, number, bool } = PropTypes;\r\n\r\nHistoryView.propTypes = {\r\n  data: arrayOf(\r\n    exact({\r\n      wpm: number,\r\n      progress: number,\r\n      prevTxt: string,\r\n      nextTxt: string\r\n    })\r\n  ),\r\n  loading: bool\r\n};\r\n\r\nHistoryView.defaultProps = {\r\n  data: [],\r\n  loading: false\r\n};\r\n\r\nexport default HistoryView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../common/ErrorBoundary\";\r\nimport Loading from \"../common/loading\";\r\nimport HistoryView from \"./HistoryView\";\r\nimport Api from \"../services/api\";\r\nimport { ssGetUser } from \"../helpers/sessionStorage\";\r\n\r\nconst History = props => {\r\n  const [historyData, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const userBinId = ssGetUser().binId;\r\n\r\n  // get's the users history and updates the state\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      const result = await Api.getHistory(userBinId).catch(e => setError(true));\r\n      const { history } = result.data;\r\n      if (history && history.length) {\r\n        setHistory(history);\r\n      }\r\n      setLoading(false);\r\n    })();\r\n  }, [props.historyUpdated, userBinId]);\r\n\r\n  if (error) {\r\n    return <ErrorBoundary error={\"Wrong Api call\"} />;\r\n  }\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  return <HistoryView data={historyData} loading={props.loading || loading} />;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  historyUpdated: state.historyUpdated,\r\n  loading: state.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(History);\r\n","import React from \"react\";\r\nimport TypeRacer from \"../typeRacer\";\r\nimport History from \"../history\";\r\nimport ErrorBoundary from \"../common/ErrorBoundary\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <TypeRacer />\r\n      </ErrorBoundary>\r\n      <ErrorBoundary>\r\n        <History />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UncontrolledInput = props => {\r\n  const { type, name, label, placeholder, classes } = props;\r\n  return (\r\n    <label>\r\n      {label}\r\n      <input\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        autoComplete={name}\r\n        className={classes}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst { string } = PropTypes;\r\n\r\nUncontrolledInput.propTypes = {\r\n  type: string.isRequired,\r\n  name: string.isRequired,\r\n  label: string,\r\n  placeholder: string,\r\n  classes: string\r\n};\r\n\r\nUncontrolledInput.defaultProps = {\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  classes: \"\"\r\n};\r\n\r\nexport default UncontrolledInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport UncontrolledInput from \"../common/UncontrolledInput\";\r\nimport { formDataHandler } from \"../helpers/formDataHandler\";\r\n\r\nconst LoginForm = props => {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { username, pass } = formDataHandler(e.target);\r\n\r\n    if (username.length && pass.length) {\r\n      props.handleSubmit({ username, pass });\r\n    } else {\r\n      props.handleSubmit(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginForm\">\r\n      <p>Login</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <UncontrolledInput\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          classes=\"input\"\r\n        />\r\n        <UncontrolledInput\r\n          type=\"password\"\r\n          name=\"pass\"\r\n          placeholder=\"Password\"\r\n          classes=\"input\"\r\n        />\r\n        <button className=\"btn btn-default\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LoginForm;\r\n","export const formDataHandler = (target = {}) => {\r\n  const formData = new FormData(target);\r\n  const values = {};\r\n  for (let v of formData) {\r\n    values[v[0]] = v[1];\r\n  }\r\n  return values;\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ssGetUser } from \"../helpers/sessionStorage\";\r\nimport { checkLogin } from \"../helpers/checkLogin\";\r\n\r\nconst RedirectExistingUser = props => {\r\n  if (props.manualRedirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  let userData = ssGetUser();\r\n\r\n  if (userData) {\r\n    const { name, binId } = userData;\r\n    if (checkLogin(name, binId)) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nRedirectExistingUser.propTypes = {\r\n  manualRedirect: PropTypes.bool\r\n};\r\n\r\nRedirectExistingUser.defaultProps = {\r\n  manualRedirect: false\r\n};\r\n\r\nexport default RedirectExistingUser;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { checkLogin } from \"../helpers/checkLogin\";\r\nimport { ssGetUser } from \"../helpers/sessionStorage\";\r\n\r\nexport default ExtendComponent => {\r\n  const Auth = props => {\r\n    let userData = ssGetUser();\r\n    let redirect = false;\r\n\r\n    if (userData) {\r\n      const { name, binId } = userData;\r\n      if (!checkLogin(name, binId)) {\r\n        redirect = true;\r\n      }\r\n    } else {\r\n      redirect = true;\r\n    }\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return <ExtendComponent {...props} />;\r\n  };\r\n\r\n  return Auth;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport RedirectExistingUser from \"./RedirectExistingUser\";\r\nimport { validateLogin } from \"../helpers/checkLogin\";\r\nimport { ssSetUser } from \"../helpers/sessionStorage\";\r\n\r\nconst Login = () => {\r\n  const [error, handleError] = useState(\"\");\r\n  const [redirect, handleRedirect] = useState(false);\r\n\r\n  const proceedLogin = data => {\r\n    if (!data) {\r\n      handleError(\"Please fill the fields\");\r\n      return false;\r\n    }\r\n\r\n    const loginData = validateLogin(data.username, data.pass);\r\n\r\n    if (loginData) {\r\n      handleError(\"\");\r\n      ssSetUser(loginData);\r\n      handleRedirect(true);\r\n    } else {\r\n      handleError(\"No such user\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RedirectExistingUser manualRedirect={redirect} />\r\n      <LoginForm handleSubmit={proceedLogin} />\r\n      {error.length ? <p>{error}</p> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <p>It seems that we don't have such a page.</p>\r\n      <p>\r\n        Please <Link to=\"/\">visit the home page</Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { ssLogout, ssGetUser } from \"../helpers/sessionStorage\";\r\n\r\nconst Header = props => {\r\n  const logout = () => {\r\n    ssLogout();\r\n\r\n    props.history.push(\"/login\");\r\n  };\r\n  return (\r\n    <header className=\"mainHeader\">\r\n      <h1 data-testid=\"logo\">TypeRacer</h1>\r\n      {ssGetUser().binId && (\r\n        <button\r\n          className=\"btn btn-default\"\r\n          data-testid=\"logout\"\r\n          onClick={logout}\r\n        >\r\n          Log out\r\n        </button>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport auth from \"./utils/auth\";\r\nimport Home from \"./home\";\r\nimport LoginContainer from \"./login\";\r\nimport NotFound from \"./notFound\";\r\nimport Header from \"./common/Header\";\r\n\r\nexport default (\r\n  <Router>\r\n    <Route path=\"/type-racer\" component={Header} />\r\n    <Switch>\r\n      <Route exact path=\"/type-racer\" component={auth(Home)} />\r\n      <Route path=\"/type-racer/login\" component={LoginContainer} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store\";\nimport routes from \"./routes\";\nimport ErrorBoundary from \"./common/ErrorBoundary\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <Provider store={Store}>{routes}</Provider>\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}